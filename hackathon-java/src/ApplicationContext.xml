<?xml version="1.0" encoding="UTF-8"?>
<!-- 指定Spring配置文件的Schema信息 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

       <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
             destroy-method="close"
             p:driverClass="com.mysql.jdbc.Driver"
             p:jdbcUrl="jdbc:mysql://localhost:3306/eleme"
             p:user="root"
             p:password="toor"
             p:maxPoolSize="100"
             p:minPoolSize="10"
             p:initialPoolSize="20"
             p:maxIdleTime="20"/>

       <bean id="sessionFactory"
             class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
             p:dataSource-ref="dataSource">

              <property name="mappingResources">
                     <list>
                            <!-- 以下用来列出Hibernate映射文件 -->
                            <value>com/hackathon/model/User.hbm.xml</value>
                            <value>com/hackathon/model/Food.hbm.xml</value>
                     </list>
              </property>

              <property name="hibernateProperties">
                     <value>
                         hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
                         hibernate.hbm2ddl.auto=update
                         hibernate.show_sql=true
                         hibernate.format_sql=true
                         Hibernate.temp.use_jdbc_metadata_defaults=false
                         #开启二级缓存
                         hibernate.cache.use_second_level_cache=true
                         #设置二级缓存的提供者
                         hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
                     </value>
              </property>
       </bean>

        <!-- DAO层配置 -->
        <!-- 配置DAO组件的模板 -->
        <bean id="daoTemplate" abstract="true" lazy-init="true">
            <property name="sessionFactory" >
                <ref bean="sessionFactory" />
            </property>
        </bean>

        <bean id="UserDao"
              class="com.hackathon.dao.UserDao" parent="daoTemplate"/>

        <bean id="FoodDao"
              class="com.hackathon.dao.FoodDao"
              parent="daoTemplate"/>

        <!-- 为Servlet注入DAO组件 -->
        <bean id="LoginApi"
              class="com.hackathon.api.LoginApi" >
            <property name="UserDao" ref="UserDao" />
        </bean>

        <bean id="Welcome"
              class="com.hackathon.api.Welcome" >
            <property name="UserDao" ref="UserDao" />
        </bean>

</beans>








       <!-- 配置事务增强处理Bean,指定事务管理器
       <tx:advice id="txAdvice" transaction-manager="transactionManager">
              &lt;!&ndash; 用于配置详细的事务语义 &ndash;&gt;
              <tx:attributes>
                     &lt;!&ndash; 所有以'get'开头的方法是read-only的 &ndash;&gt;
                     <tx:method name="get*" read-only="true"/>
                     &lt;!&ndash; 其他方法使用默认的事务设置 &ndash;&gt;
                     <tx:method name="*"/>
              </tx:attributes>
       </tx:advice>
       <aop:config>
              &lt;!&ndash; 配置一个切入点，匹配empManager和mgrManager
                  两个Bean的所有方法的执行 &ndash;&gt;
              <aop:pointcut id="CmsPointcut"
                            expression="bean(sUserManage)"/>
              &lt;!&ndash; 指定在leePointcut切入点应用txAdvice事务增强处理 &ndash;&gt;
              <aop:advisor advice-ref="txAdvice"
                           pointcut-ref="CmsPointcut"/>
       </aop:config>-->


